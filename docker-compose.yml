---
version: '3.0'
services:
  mysql-order:
    container_name: mysql-order
    image: mysql:8.0.28
    volumes:
      - ./mysql-order:/data/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mypassword
      MYSQL_DATABASE: order_services
      MYSQL_USER: root
      MYSQL_PASSWORD: mypassword
    expose:
      - "3306"
    ports:
      - "3306:3306"
    command: -p 3306
    restart: always

  mysql-inventory:
    container_name: mysql-inventory
    image: mysql:8.0.28
    volumes:
      - ./mysql-inventory:/data/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mypassword
      MYSQL_DATABASE: inventory_services
      MYSQL_USER: root
      MYSQL_PASSWORD: mypassword
    expose:
      - "3306"
    ports:
      - "3306:3306"
    command: -p 3306
    restart: always

  mongo-product:
    container_name: mongo-product
    image: mongo:4.4.18
    environment:
      - MONGO_INITDB_DATABASE: product_services
      - MONGO_INITDB_ROOT_USERNAME: productsuper
      - MONGO_INITDB_ROOT_PASSWORD: super123
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1